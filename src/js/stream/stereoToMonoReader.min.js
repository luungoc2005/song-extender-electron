function createSourceBuffer(e){switch(bitDepth){case 8:return signed?new Int8Array(e.buffer):new Uint8Array(e.buffer);case 16:return signed?new Int16Array(e.buffer):new Uint16Array(e.buffer);case 32:return signed?new Int32Array(e.buffer):new Uint32Array(e.buffer);default:return new Int16Array(e.buffer)}}function createDestBuffer(e){var r=e.length/(bitDepth/8)/2;switch(bitDepth){case 8:return signed?new Int8Array(r):new Uint8Array(r);case 16:return signed?new Int16Array(r):new Uint16Array(r);case 32:return signed?new Int32Array(r):new Uint32Array(r);default:return new Int16Array(e.length/4)}}const e=require("stream").Transform,r=require("util");var bitDepth,channels,signed,StereoToMonoReader=function(r){e.call(this,{objectMode:!0}),bitDepth=r.bitDepth,channels=r.channels,signed=r.signed,r.channels=1};r.inherits(StereoToMonoReader,e),module.exports=StereoToMonoReader,StereoToMonoReader.prototype._transform=function(e,r,n){if(0===e.length)this.push(null),n();else if(1===channels||e.length%2!==0)this.push(e),n();else{for(var t=new createSourceBuffer(e),a=new createDestBuffer(e),s=0,f=0;f<t.length;f+=2)a[s]=.5*t[f]+.5*t[f+1],s++;var i=Buffer.from(a.buffer);this.push(i),n()}};